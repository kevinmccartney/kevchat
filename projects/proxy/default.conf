server {
    listen 80;
    server_name ${KEVCHAT_ENV}.*.kev.chat ${KEVCHAT_ENV}.kev.chat;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name ${KEVCHAT_ENV}.kafka-ui.kev.chat;

    default_type application/json;

    include /etc/nginx/includes/ssl-common.conf;

    location / {
        auth_request /validate;
        error_page 401 = /unauthorized;

        proxy_pass http://${KEVCHAT_KAFKA_UI_INTERNAL_HOST}:${KEVCHAT_KAFKA_UI_PORT};
        include /etc/nginx/includes/proxy-headers.conf;
    }

    location = /validate {
        internal;
        include /etc/nginx/includes/proxy-headers.conf;
        proxy_set_header Authorization "Bearer $access_token";
        proxy_pass http://${KEVCHAT_IDP_INTERNAL_HOST}:${KEVCHAT_IDP_PORT}/auth/validate;
    }

    location = /unauthorized {
        return 401 '{"message": "Unauthorized", "code": 401}';
    }
}

server {
    listen 443 ssl;
    server_name ${KEVCHAT_ENV}.socketio-admin.kev.chat;

    default_type application/json;

    include /etc/nginx/includes/ssl-common.conf;

    location / {
        auth_request /validate;
        error_page 401 = /unauthorized;

        proxy_pass http://${KEVCHAT_SOCKET_IO_ADMIN_INTERNAL_HOST}:${KEVCHAT_SOCKET_IO_ADMIN_PORT};
        include /etc/nginx/includes/proxy-headers.conf;
    }

    location = /validate {
        internal;
        include /etc/nginx/includes/proxy-headers.conf;
        proxy_set_header Authorization "Bearer $access_token";
        proxy_pass http://${KEVCHAT_IDP_INTERNAL_HOST}:${KEVCHAT_IDP_PORT}/auth/validate;
    }

    location = /unauthorized {
        return 401 '{"message": "Unauthorized", "code": 401}';
    }
}

server {
    listen 443 ssl;
    server_name ${KEVCHAT_ENV}.idp.kev.chat;

    include /etc/nginx/includes/ssl-common.conf;

    location / {
        proxy_pass http://${KEVCHAT_IDP_INTERNAL_HOST}:${KEVCHAT_IDP_PORT};
        include /etc/nginx/includes/proxy-headers.conf;
    }
}

server {
    listen 443 ssl;
    server_name ${KEVCHAT_ENV}.api.kev.chat;

    default_type application/json;
    include /etc/nginx/includes/ssl-common.conf;
    include /etc/nginx/includes/cors-headers.conf;

    location /socket.io/ {
        auth_request /validate;
        error_page 401 = /unauthorized;

        proxy_pass http://kevchat_api:5000;  # Replace with your backend WebSocket server
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location = /healthz {
        proxy_pass http://${KEVCHAT_API_INTERNAL_HOST}:${KEVCHAT_API_PORT}/healthz;
        include /etc/nginx/includes/proxy-headers.conf;
    }

    location = /validate {
        internal;
        include /etc/nginx/includes/proxy-headers.conf;
        proxy_set_header Authorization "Bearer $access_token";
        proxy_pass http://${KEVCHAT_IDP_INTERNAL_HOST}:${KEVCHAT_IDP_PORT}/auth/validate;
    }

    location = /unauthorized {
        return 401 '{"message": "Unauthorized", "code": 401}';
    }

    location / {
        if ($request_method = OPTIONS) {
            return 204;
        }

        auth_request /validate;
        error_page 401 = /unauthorized;

        proxy_pass http://${KEVCHAT_API_INTERNAL_HOST}:${KEVCHAT_API_PORT};
        include /etc/nginx/includes/proxy-headers.conf;
    }
}

server {
    listen 443 ssl;
    server_name ${KEVCHAT_ENV}.app.kev.chat;

    default_type application/json;
    include /etc/nginx/includes/ssl-common.conf;

    # built assets need to able to be loaded without auth
    location ^~ /_next {
        proxy_pass http://${KEVCHAT_CLIENT_INTERNAL_HOST}:${KEVCHAT_CLIENT_PORT};
        include /etc/nginx/includes/proxy-headers.conf;
    }

    # auth callbacks must also be unauthed
    location ~ ^/auth/callback/(login|logout) {
        proxy_pass http://${KEVCHAT_CLIENT_INTERNAL_HOST}:${KEVCHAT_CLIENT_PORT};
        include /etc/nginx/includes/proxy-headers.conf;
    }

    location = /healthz {
        proxy_pass http://${KEVCHAT_CLIENT_INTERNAL_HOST}:${KEVCHAT_CLIENT_PORT}/healthz;
        include /etc/nginx/includes/proxy-headers.conf;
    }

    location = /validate {
        internal;
        include /etc/nginx/includes/proxy-headers.conf;
        proxy_set_header Authorization "Bearer $access_token";
        proxy_pass http://${KEVCHAT_IDP_INTERNAL_HOST}:${KEVCHAT_IDP_PORT}/auth/validate;
    }

    # pass to the unauthorized page from NextJS
    location = /unauthorized {
        proxy_pass http://${KEVCHAT_CLIENT_INTERNAL_HOST}:${KEVCHAT_CLIENT_PORT}/unauthorized;
        include /etc/nginx/includes/proxy-headers.conf;
    }

    # named location since we have regular location to handle /unauthorized
    location @unauthorized {
        return 307 https://local.app.kev.chat/unauthorized;
    }

    location / {
        auth_request /validate;
        error_page 401 = @unauthorized;

        proxy_pass http://${KEVCHAT_CLIENT_INTERNAL_HOST}:${KEVCHAT_CLIENT_PORT};
        include /etc/nginx/includes/proxy-headers.conf;
    }
}

server {
    listen 443 ssl;
    server_name ${KEVCHAT_ENV}.kev.chat;

    include /etc/nginx/includes/ssl-common.conf;

    location / {
        proxy_pass http://${KEVCHAT_FRONT_DOOR_INTERNAL_HOST}:${KEVCHAT_FRONT_DOOR_PORT};
        include /etc/nginx/includes/proxy-headers.conf;
    }
}
